// <auto-generated />
using System;
using DataModel.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataModel.Migrations
{
    [DbContext(typeof(DbGestionStockContext))]
    partial class DbGestionStockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataModel.Entities.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Confirm")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            Confirm = true,
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 496, DateTimeKind.Local).AddTicks(9949),
                            RoleId = "82a0bec6-8266-443a-84a2-af85ad69348b",
                            UserId = "362c2637-2ad9-449a-9498-dbd74be87ee8",
                            UserName = "almacen",
                            UserPass = "odeNiMDGrhgpMHmoHQKCQg==",
                            state = 1
                        },
                        new
                        {
                            Id = "ed456bd3-2578-45a8-81f6-938c6a4cf9b3",
                            Confirm = true,
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 525, DateTimeKind.Local).AddTicks(661),
                            RoleId = "66e3d763-3f6c-49f1-ad72-3b64051c4879",
                            UserId = "362c2637-2ad9-449a-9498-dbd74be87ee8",
                            UserName = "cajero",
                            UserPass = "odeNiMDGrhgpMHmoHQKCQg==",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.Business", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuit_Cuil")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            Id = "de07358c-3a51-42fb-8690-c383b91b5844",
                            Address = "San Lorenzo",
                            BusinessName = "Almacen",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 548, DateTimeKind.Local).AddTicks(6800),
                            Cuit_Cuil = "30-45785215-9",
                            Phone = "3419875425",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "ABARROTES",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5085),
                            Description = "Este tipo de recinto comercial ofrece alimentos envasados o de venta al peso, desde panes hasta productos lácteos pasando por conservas. Los abarrotes, en algunos países sudamericanos, se denominan almacenes.",
                            state = 1
                        },
                        new
                        {
                            Id = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "PRODUCTOS ENLATADOS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5385),
                            Description = "Un alimento enlatado, es por ende, un alimento fresco, incorporado en un recipiente metálico, herméticamente cerrado el cual se somete a un proceso de calentamiento a temperaturas superiores a los 100 °C, para conservarlo, lo más parecido posible, a su estado en forma natural hasta el momento de consumirlo.",
                            state = 1
                        },
                        new
                        {
                            Id = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "BEBIDAS ALCOHÓLICAS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5388),
                            Description = "Las bebidas alcohólicas son aquellas bebidas que contienen etanol en su composición. Las bebidas alcohólicas desempeñan un papel social importante en muchas culturas del mundo, debido a su efecto de droga recreativa depresora.",
                            state = 1
                        },
                        new
                        {
                            Id = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "LÁCTEOS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5392),
                            Description = "El grupo de los lácteos (también productos lácteos, lácticos o derivados lácteos) incluye alimentos como la leche y sus derivados procesados. Las plantas industriales que producen estos alimentos pertenecen a la industria láctea y se caracterizan por la manipulación de un producto altamente perecedero, como la leche, que debe vigilarse y analizarse correctamente durante todos los pasos de la cadena de frío hasta su llegada al consumidor.",
                            state = 1
                        },
                        new
                        {
                            Id = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "BOTANAS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5399),
                            Description = "Es un tipo de aperitivo, ese plato que da inicio a una comida y se comparte entre los comensales. Algunas de las botanas más tradicionales generalmente están hechas con una masa de maíz que termina siendo tortillas, totopos, tostadas… y normalmente se acompañan con diferentes salsas.",
                            state = 1
                        },
                        new
                        {
                            Id = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "CONFITERÍA/DULCERIA",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5403),
                            Description = "El término repostería es el que se utiliza para denominar al tipo de gastronomía que se basa en la preparación, y decoración de platos dulces tales como pies, tartas, pasteles, galletas, budines, etc.",
                            state = 1
                        },
                        new
                        {
                            Id = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "HARINAS Y PAN",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5406),
                            Description = "Se encuentra todo sobre perfumeria",
                            state = 1
                        },
                        new
                        {
                            Id = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "FRUTAS Y VERDURAS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5409),
                            Description = "Las frutas y verduras se consideran partes comestibles de las plantas (por ejemplo, estructuras portadoras de semillas, flores, brotes, hojas, tallos, brotes y raíces), ya sean cultivadas o cosechadas en forma silvestre, en estado crudo o en forma mínimamente elaborada.",
                            state = 1
                        },
                        new
                        {
                            Id = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "BEBIDAS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5412),
                            Description = "Bebida es cualquier líquido que se ingiere. La bebida más consumida es el agua. Otros ejemplos son las bebidas alcohólicas, bebidas gaseosas, infusiones o zumos. En Chile se le llama bebida exclusivamente a las gaseosas.",
                            state = 1
                        },
                        new
                        {
                            Id = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "ALIMENTOS PREPARADOS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5415),
                            Description = "Alimento listo para el consumo: alimento que está en forma comestible, sin necesidad de lavado, cocimiento, o preparación adicional por parte del establecimiento de comida o consumidor, y se espera que sea consumido en esa forma.",
                            state = 1
                        },
                        new
                        {
                            Id = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "AUTOMEDICACIÓN",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5418),
                            Description = "La automedicación es la utilización de medicamentos por iniciativa propia sin ninguna intervención por parte del médico (ni en el diagnóstico de la enfermedad, ni en la prescripción o supervisión del tratamiento)",
                            state = 1
                        },
                        new
                        {
                            Id = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "HIGIENE PERSONAL",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5421),
                            Description = "La higiene personal es el concepto básico del aseo, de la limpieza y del cuidado del cuerpo humano.",
                            state = 1
                        },
                        new
                        {
                            Id = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "USO DOMÉSTICO",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5424),
                            Description = "USO DOMÉSTICO.",
                            state = 1
                        },
                        new
                        {
                            Id = "db2ca371-5ba5-49d9-81cf-f04f49a61b0e",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "HELADOS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5426),
                            Description = "En su forma más simple, el helado o crema helada es un alimento congelado que por lo general se hace de productos lácteos tales como leche o crema.",
                            state = 1
                        },
                        new
                        {
                            Id = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "JARCERÍA / PRODUCTOS DE LIMPIEZA",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5429),
                            Description = "Jarciería es el término que se refiere a toda aquella mercadería que se denomina comúnmente instrumentos de limpieza. Existe gran variedad de jarciería a la venta ya sea en la típica tienda de autoservicio o bien en compañías especializadas.",
                            state = 1
                        },
                        new
                        {
                            Id = "9cb3d8c8-226e-4f1a-b04d-258db3329c75",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CategoryName = "OTROS PRODUCTOS",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 566, DateTimeKind.Local).AddTicks(5432),
                            Description = "Que no tiene una categoria especifico",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.History", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModuleAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("OptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("DataModel.Entities.HistoryPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.Property<int>("typeUpdate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ProductId");

                    b.ToTable("HistoryPrices");
                });

            modelBuilder.Entity("DataModel.Entities.IncreasePriceAfterTwelve", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HourFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HourTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Porcent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("IncreasePriceAfterTwelves");
                });

            modelBuilder.Entity("DataModel.Entities.Lot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("DataModel.Entities.PaymentType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = "f5f737fd-860c-485b-972a-927d385f4ab5",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(174),
                            Description = "Efectivo",
                            PaymentName = "Efectivo",
                            state = 1
                        },
                        new
                        {
                            Id = "4c1ffed9-2f0c-4294-8b82-d236da387b39",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1427),
                            Description = "Tarjeta de debito",
                            PaymentName = "Tarjeta de debito",
                            state = 1
                        },
                        new
                        {
                            Id = "3700a7b3-0e1b-49e2-87ce-490d06d2512c",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1455),
                            Description = "Tarjeta de credito",
                            PaymentName = "Tarjeta de credito",
                            state = 1
                        },
                        new
                        {
                            Id = "50e82295-a08f-42fa-aae0-26813bc261db",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1459),
                            Description = "Cheques",
                            PaymentName = "Cheques",
                            state = 1
                        },
                        new
                        {
                            Id = "1535f60d-2db1-4c65-90bc-c1ded55b07aa",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1462),
                            Description = "Mercado pago",
                            PaymentName = "Mercado pago",
                            state = 1
                        },
                        new
                        {
                            Id = "876d4600-b062-4e84-937d-8a79f88c1e47",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1465),
                            Description = "Transferencia bancaria",
                            PaymentName = "Transferencia bancaria",
                            state = 1
                        },
                        new
                        {
                            Id = "c3eb2f61-7bd0-47ed-8a16-98e1b7d24b44",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1468),
                            Description = "Especie",
                            PaymentName = "Especie",
                            state = 1
                        },
                        new
                        {
                            Id = "da40a532-f06a-4fff-8f66-a7563fef8941",
                            AccountId = "3e67c8f7-24ce-4f2e-bada-8344f5d0f8ca",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 560, DateTimeKind.Local).AddTicks(1471),
                            Description = "Cuenta Corriente",
                            PaymentName = "Cuenta Corriente",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataModel.Entities.Provider", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuit_Cuil")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("DataModel.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "82a0bec6-8266-443a-84a2-af85ad69348b",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 556, DateTimeKind.Local).AddTicks(6891),
                            Description = "Tiene acceso en todo",
                            RoleName = "Admin",
                            state = 1
                        },
                        new
                        {
                            Id = "66e3d763-3f6c-49f1-ad72-3b64051c4879",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 556, DateTimeKind.Local).AddTicks(7537),
                            Description = "Tiene acceso para realizar ventas, con limite",
                            RoleName = "Empleado(a)",
                            state = 1
                        },
                        new
                        {
                            Id = "0ac46b16-ef03-452c-9586-ba4251496b3f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 556, DateTimeKind.Local).AddTicks(7547),
                            Description = "Solo puede hacer control de stock",
                            RoleName = "Almacenero(a)",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.Sale", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InvoiceCode")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SaleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("finalizeSale")
                        .HasColumnType("bit");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("DataModel.Entities.SaleDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.HasIndex("productId");

                    b.ToTable("SaleDetails");
                });

            modelBuilder.Entity("DataModel.Entities.SubCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = "81806b92-46ce-4177-bcad-3c572857aec5",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6297),
                            Description = "Aceite comestibles",
                            SubCategoryName = "Aceite comestibles",
                            state = 1
                        },
                        new
                        {
                            Id = "c4a81f89-6f44-4c1c-bfd6-adf1f0a312e3",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6523),
                            Description = "Aderezos",
                            SubCategoryName = "Aderezos",
                            state = 1
                        },
                        new
                        {
                            Id = "51858237-ae9b-4731-88c2-f19a2d344c3c",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6530),
                            Description = "Crema para café",
                            SubCategoryName = "Crema para café",
                            state = 1
                        },
                        new
                        {
                            Id = "dc85f186-d18b-4a8b-a504-698fda19a9b6",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6534),
                            Description = "Pure de tomate",
                            SubCategoryName = "Pure de tomate",
                            state = 1
                        },
                        new
                        {
                            Id = "9a15a184-1821-4b06-9b6d-8624e62f42fb",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6537),
                            Description = "Alimento para bebe",
                            SubCategoryName = "Alimento para bebe",
                            state = 1
                        },
                        new
                        {
                            Id = "a4d3cc0d-8e39-460c-a02d-18fc2dced014",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6545),
                            Description = "Alimento para mascotas",
                            SubCategoryName = "Alimento para mascotas",
                            state = 1
                        },
                        new
                        {
                            Id = "6c9aa2b5-8cef-4621-b526-d94b08c17e46",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6549),
                            Description = "Avena",
                            SubCategoryName = "Avena",
                            state = 1
                        },
                        new
                        {
                            Id = "fd74c75f-db36-4101-bcd4-9b5d672f2c5a",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6553),
                            Description = "Azúcar",
                            SubCategoryName = "Azúcar",
                            state = 1
                        },
                        new
                        {
                            Id = "84990688-e3f9-45af-8f22-03c77262c614",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6557),
                            Description = "Cereales",
                            SubCategoryName = "Cereales",
                            state = 1
                        },
                        new
                        {
                            Id = "b21274b8-1f85-4034-aa24-f47ae1f46d00",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6562),
                            Description = "Especias",
                            SubCategoryName = "Especias",
                            state = 1
                        },
                        new
                        {
                            Id = "77c79cbb-b53e-40aa-aa80-043d4f221bec",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6567),
                            Description = "Harina",
                            SubCategoryName = "Harina",
                            state = 1
                        },
                        new
                        {
                            Id = "e5eab8bf-d214-4bb2-a42a-e73d6c8890d8",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6571),
                            Description = "Sal",
                            SubCategoryName = "Sal",
                            state = 1
                        },
                        new
                        {
                            Id = "995a74e1-98b5-4489-977d-f84113df2bc1",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6575),
                            Description = "Sopas en sobre",
                            SubCategoryName = "Sopas en sobre",
                            state = 1
                        },
                        new
                        {
                            Id = "1579c57f-cf33-4645-bfcc-4d09f92a70a3",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6585),
                            Description = "Catsup",
                            SubCategoryName = "Catsup",
                            state = 1
                        },
                        new
                        {
                            Id = "24a73edb-d737-42fa-a380-b2fdddd9ef44",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6589),
                            Description = "Mayonesa",
                            SubCategoryName = "Mayonesa",
                            state = 1
                        },
                        new
                        {
                            Id = "1a3985b7-65b2-4fc3-bf00-7d5764bd59f2",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6593),
                            Description = "Mermelada",
                            SubCategoryName = "Mermelada",
                            state = 1
                        },
                        new
                        {
                            Id = "208b7941-a0a1-47bb-8b6c-5108c0f4cc2b",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6597),
                            Description = "Miel",
                            SubCategoryName = "Miel",
                            state = 1
                        },
                        new
                        {
                            Id = "005dc5af-61c1-4b54-9266-03407ca75d10",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6602),
                            Description = "Te",
                            SubCategoryName = "Te",
                            state = 1
                        },
                        new
                        {
                            Id = "84bb56bb-c36d-4117-a4cf-e768990761eb",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6607),
                            Description = "Vinagre",
                            SubCategoryName = "Vinagre",
                            state = 1
                        },
                        new
                        {
                            Id = "524bbae4-38ca-4f9b-9603-aebcd65ecf84",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6611),
                            Description = "Huevo",
                            SubCategoryName = "Huevo",
                            state = 1
                        },
                        new
                        {
                            Id = "7fc35ef8-08f5-4504-b578-012b873574d9",
                            CategoryId = "4444da14-84ac-48de-a7da-a4f4ddd28858",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6615),
                            Description = "Pastas",
                            SubCategoryName = "Pastas",
                            state = 1
                        },
                        new
                        {
                            Id = "82fe357c-af4b-436b-b648-983a6092aa65",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6621),
                            Description = "Aceitunas",
                            SubCategoryName = "Aceitunas",
                            state = 1
                        },
                        new
                        {
                            Id = "41e9e143-03db-4b0f-a51b-6b9160d357fc",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6625),
                            Description = "Champiñones enteros/rebanados",
                            SubCategoryName = "Champiñones enteros/rebanados",
                            state = 1
                        },
                        new
                        {
                            Id = "90bb3117-ea6e-4868-9fc3-7504f685c03e",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6629),
                            Description = "Chícharo con zanahoria",
                            SubCategoryName = "Chícharo con zanahoria",
                            state = 1
                        },
                        new
                        {
                            Id = "13722a31-d37e-4c44-9226-fef2dd6ab09e",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6638),
                            Description = "Chícharos enlatados",
                            SubCategoryName = "Chícharos enlatados",
                            state = 1
                        },
                        new
                        {
                            Id = "07735a2d-1e10-404d-8ae4-28c05bab0e6b",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6643),
                            Description = "Frijoles enlatados",
                            SubCategoryName = "Frijoles enlatados",
                            state = 1
                        },
                        new
                        {
                            Id = "a8f90356-989c-47a5-a6f6-ab338f283018",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6647),
                            Description = "Frutas en almíbar",
                            SubCategoryName = "Frutas en almíbar",
                            state = 1
                        },
                        new
                        {
                            Id = "42496afc-b727-48cb-ae26-eb20c859bba7",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6650),
                            Description = "Sardinas",
                            SubCategoryName = "Sardinas",
                            state = 1
                        },
                        new
                        {
                            Id = "9d6c9083-6b73-45c9-a61b-28800cfc5d0a",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6654),
                            Description = "Atún en agua/aceite",
                            SubCategoryName = "Atún en agua/aceite",
                            state = 1
                        },
                        new
                        {
                            Id = "e3a46fc4-de62-41cc-8a11-305cbbf77ebb",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6657),
                            Description = "Chiles enlatados",
                            SubCategoryName = "Chiles enlatados",
                            state = 1
                        },
                        new
                        {
                            Id = "1bc53107-6800-4b35-b4f3-c3363fb89a19",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6661),
                            Description = "Chiles envasados",
                            SubCategoryName = "Chiles envasados",
                            state = 1
                        },
                        new
                        {
                            Id = "2cd8ebea-b8e5-408e-b098-4a6f635bc6bd",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6664),
                            Description = "Ensaladas enlatadas",
                            SubCategoryName = "Ensaladas enlatadas",
                            state = 1
                        },
                        new
                        {
                            Id = "c3165ffb-7ad1-4730-8b00-a335edac1cc5",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6667),
                            Description = "Granos de elote enlatados",
                            SubCategoryName = "Granos de elote enlatados",
                            state = 1
                        },
                        new
                        {
                            Id = "9c8dde52-8d6c-4b7c-9651-fef58287be61",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6671),
                            Description = "Sopa en lata",
                            SubCategoryName = "Sopa en lata",
                            state = 1
                        },
                        new
                        {
                            Id = "25202d3f-46e2-4706-aa39-f1100063aeca",
                            CategoryId = "96e050b3-4f1c-4280-8ce0-1f32b6af87f1",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6674),
                            Description = "Vegetales en conserva",
                            SubCategoryName = "Vegetales en conserva",
                            state = 1
                        },
                        new
                        {
                            Id = "30c5ec35-19f7-4d52-aaa1-cfcf21987603",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6677),
                            Description = "Bebidas preparadas",
                            SubCategoryName = "Bebidas preparadas",
                            state = 1
                        },
                        new
                        {
                            Id = "6ad37caa-6ee5-4f73-ab41-ea2be3d77828",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6681),
                            Description = "Cerveza",
                            SubCategoryName = "Cerveza",
                            state = 1
                        },
                        new
                        {
                            Id = "cf17f4d4-cfc1-4c06-9f6a-6eac5062ede9",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6691),
                            Description = "Anís",
                            SubCategoryName = "Anís",
                            state = 1
                        },
                        new
                        {
                            Id = "7027f120-3478-4896-81cf-21bcff739315",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6699),
                            Description = "Brandy",
                            SubCategoryName = "Brandy",
                            state = 1
                        },
                        new
                        {
                            Id = "55136ca5-1c33-4e44-9e4d-34a06c6086f8",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6703),
                            Description = "Ginebra.",
                            SubCategoryName = "Ginebra",
                            state = 1
                        },
                        new
                        {
                            Id = "dd56fb2d-90d1-404d-bf33-3a2163a6fc20",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6706),
                            Description = "Cordiales",
                            SubCategoryName = "Cordiales",
                            state = 1
                        },
                        new
                        {
                            Id = "1a27fb1d-7b20-41a2-9c53-43e5afa27698",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(6716),
                            Description = "Mezcal",
                            SubCategoryName = "Mezcal",
                            state = 1
                        },
                        new
                        {
                            Id = "247700b0-7887-45b1-b670-4e97c0b90b44",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7064),
                            Description = "Jerez",
                            SubCategoryName = "Jerez",
                            state = 1
                        },
                        new
                        {
                            Id = "bca46483-d119-4a9a-a72b-676d761ebb6a",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7072),
                            Description = "Ron",
                            SubCategoryName = "Ron",
                            state = 1
                        },
                        new
                        {
                            Id = "dd2d472b-252b-4963-a802-6e615657df04",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7077),
                            Description = "Tequila",
                            SubCategoryName = "Tequila",
                            state = 1
                        },
                        new
                        {
                            Id = "a5b8701d-c62c-476e-b22f-e666def4152a",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7081),
                            Description = "Sidra",
                            SubCategoryName = "Sidra",
                            state = 1
                        },
                        new
                        {
                            Id = "def25cbf-86db-4ae4-ae45-7a63a8d71c6c",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7084),
                            Description = "Whiskey",
                            SubCategoryName = "Whiskey",
                            state = 1
                        },
                        new
                        {
                            Id = "fef25062-8fc1-4006-8514-e234bfa63a05",
                            CategoryId = "eeb60ffd-ff0d-4367-afc6-e28bef23f1ef",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7088),
                            Description = "Vodka",
                            SubCategoryName = "Vodka",
                            state = 1
                        },
                        new
                        {
                            Id = "c7b90037-1c6d-4ad4-8397-5f04014ba97f",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7095),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "Leche condensada",
                            state = 1
                        },
                        new
                        {
                            Id = "1d5721d3-a787-4b8d-9d6f-ffb5d5262b21",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7104),
                            Description = "Leche en polvo",
                            SubCategoryName = "Leche deslactosada",
                            state = 1
                        },
                        new
                        {
                            Id = "6f9c9a1a-7ea6-40a2-9a50-feaa658493c7",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7108),
                            Description = "Leche evaporada",
                            SubCategoryName = "Leche evaporada",
                            state = 1
                        },
                        new
                        {
                            Id = "0c64e944-3a0b-49f4-a323-6edccc48ba35",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7113),
                            Description = "Leche light",
                            SubCategoryName = "Leche light",
                            state = 1
                        },
                        new
                        {
                            Id = "d75240b2-f901-46af-80be-fcb9a7bd174b",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7117),
                            Description = "Leche pasteurizada",
                            SubCategoryName = "Leche pasteurizada",
                            state = 1
                        },
                        new
                        {
                            Id = "6d2eac00-615c-4802-8706-ed8f3b339e26",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7120),
                            Description = "Leche saborizada",
                            SubCategoryName = "Leche saborizada",
                            state = 1
                        },
                        new
                        {
                            Id = "3e237426-d168-4f88-bdd5-44236546870a",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7123),
                            Description = "Leche semidescremada",
                            SubCategoryName = "Leche semidescremada",
                            state = 1
                        },
                        new
                        {
                            Id = "62664ce7-b8a0-4531-bfb9-932595f7d7a4",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7127),
                            Description = "Crema",
                            SubCategoryName = "Crema",
                            state = 1
                        },
                        new
                        {
                            Id = "ad74e8ce-c6cf-4f0d-a7c3-0b86a5690808",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7135),
                            Description = "Yoghurt",
                            SubCategoryName = "Yoghurt",
                            state = 1
                        },
                        new
                        {
                            Id = "35532f1d-0adf-460a-ad91-63e270f7a4db",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7139),
                            Description = "Mantequilla",
                            SubCategoryName = "Mantequilla",
                            state = 1
                        },
                        new
                        {
                            Id = "410e6eda-1fb4-4ced-84d2-3542b87ada40",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7143),
                            Description = "Margarina",
                            SubCategoryName = "Margarina",
                            state = 1
                        },
                        new
                        {
                            Id = "3861c055-4277-4c56-8114-5f2c1b898f5c",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7148),
                            Description = "Media crema",
                            SubCategoryName = "Media crema",
                            state = 1
                        },
                        new
                        {
                            Id = "b0848172-c1be-469b-b874-5143c420a137",
                            CategoryId = "4af6f8b7-b1a5-4375-8319-079e3d8487fe",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7152),
                            Description = "Queso",
                            SubCategoryName = "Queso",
                            state = 1
                        },
                        new
                        {
                            Id = "6399abe6-056a-425c-a41e-371e7f135bce",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7156),
                            Description = "Papas",
                            SubCategoryName = "Papas",
                            state = 1
                        },
                        new
                        {
                            Id = "e28f8d28-5cb6-4f56-918e-c822a0060452",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7160),
                            Description = "Palomitas",
                            SubCategoryName = "Palomitas",
                            state = 1
                        },
                        new
                        {
                            Id = "46c73d3e-d21b-4914-87a9-ebac432901e7",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7164),
                            Description = "Frituras de maíz",
                            SubCategoryName = "Frituras de maíz",
                            state = 1
                        },
                        new
                        {
                            Id = "5c19e99c-2b96-49cc-a968-7e5d270b1201",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7171),
                            Description = "Cacahuates",
                            SubCategoryName = "Cacahuates",
                            state = 1
                        },
                        new
                        {
                            Id = "bc0083b3-7fce-4fb2-92df-9d6be798366a",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7175),
                            Description = "Botanas saladas",
                            SubCategoryName = "Botanas saladas",
                            state = 1
                        },
                        new
                        {
                            Id = "82305cb1-de65-4b90-8734-87c5a768e7b3",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7179),
                            Description = "Barras alimenticias",
                            SubCategoryName = "Barras alimenticias",
                            state = 1
                        },
                        new
                        {
                            Id = "0e59c12d-d29f-4667-a3af-c1060d16ae94",
                            CategoryId = "e7c4059e-04a1-4f4a-b5c9-b86da231147f",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7187),
                            Description = "Nueces y semillas",
                            SubCategoryName = "Nueces y semillas",
                            state = 1
                        },
                        new
                        {
                            Id = "0be5b0f7-62f6-4411-b540-82b51abc865a",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7191),
                            Description = "Caramelos",
                            SubCategoryName = "Caramelos",
                            state = 1
                        },
                        new
                        {
                            Id = "dbcc02e0-7b1e-406e-b3e0-a0f333b0062e",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7195),
                            Description = "Dulces enchilados",
                            SubCategoryName = "Dulces enchilados",
                            state = 1
                        },
                        new
                        {
                            Id = "8bac1ef3-473c-41a7-95a3-209fbea0c9b7",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7198),
                            Description = "Chocolate de mesa",
                            SubCategoryName = "Chocolate de mesa",
                            state = 1
                        },
                        new
                        {
                            Id = "a93bf77b-505b-46f8-8442-795bd47d83b2",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7203),
                            Description = "Chocolate en polvo",
                            SubCategoryName = "Chocolate en polvo",
                            state = 1
                        },
                        new
                        {
                            Id = "52cd0e99-22b0-4e17-ba9f-ad448b3b8766",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7210),
                            Description = "Chocolates",
                            SubCategoryName = "Chocolates",
                            state = 1
                        },
                        new
                        {
                            Id = "dca0c0d8-69a7-451c-bbe3-db4e4237daaf",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7214),
                            Description = "Gomas de mascar",
                            SubCategoryName = "Gomas de mascar",
                            state = 1
                        },
                        new
                        {
                            Id = "a37d971a-c292-4b59-8883-04362047cb2f",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7218),
                            Description = "Mazapán",
                            SubCategoryName = "Mazapán",
                            state = 1
                        },
                        new
                        {
                            Id = "eb4ed592-7499-4ea3-9c4d-aea95c4a86b1",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7222),
                            Description = "Malvaviscos",
                            SubCategoryName = "Malvaviscos",
                            state = 1
                        },
                        new
                        {
                            Id = "0c71411a-1acc-44ce-b5ba-c2bb01fac508",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7226),
                            Description = "Pulpa de tamarindo",
                            SubCategoryName = "Pulpa de tamarindo",
                            state = 1
                        },
                        new
                        {
                            Id = "c8cb23d4-2d87-41ec-a592-9535d366f9db",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7229),
                            Description = "Pastillas de dulce",
                            SubCategoryName = "Pastillas de dulce",
                            state = 1
                        },
                        new
                        {
                            Id = "95dc66d1-1de1-46de-a588-a5080f197aae",
                            CategoryId = "f350cdda-f912-4fd3-85c9-f99863ab6c2e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7233),
                            Description = "Paletas de dulce",
                            SubCategoryName = "Paletas de dulce",
                            state = 1
                        },
                        new
                        {
                            Id = "9cdba6b6-d54a-467c-ae55-baa752ec67c7",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7237),
                            Description = "Tortillas de harina/maíz",
                            SubCategoryName = "Tortillas de harina/maíz",
                            state = 1
                        },
                        new
                        {
                            Id = "4ba4eaad-c72c-4bf4-8715-2d1d58f1901b",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7244),
                            Description = "Galletas dulces",
                            SubCategoryName = "Galletas dulces",
                            state = 1
                        },
                        new
                        {
                            Id = "d571e083-40cd-41db-8448-f55d4cc16780",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7249),
                            Description = "Galletas saladas",
                            SubCategoryName = "Galletas saladas",
                            state = 1
                        },
                        new
                        {
                            Id = "86775899-0796-4ede-b76f-b2fb4b30aced",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7252),
                            Description = "Pastelillos",
                            SubCategoryName = "Pastelillos",
                            state = 1
                        },
                        new
                        {
                            Id = "bd91bd5a-4f03-48d5-ab41-ff3900b3b566",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7256),
                            Description = "Pan de caja",
                            SubCategoryName = "Pan de caja",
                            state = 1
                        },
                        new
                        {
                            Id = "1faacaec-d09a-4fb5-ab7f-3ca55c754ccd",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7260),
                            Description = "Pan dulce",
                            SubCategoryName = "Pan dulce",
                            state = 1
                        },
                        new
                        {
                            Id = "f467869a-bbb7-4647-bb04-82e7bfd07eb5",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7265),
                            Description = "Pan molido",
                            SubCategoryName = "Pan molido",
                            state = 1
                        },
                        new
                        {
                            Id = "c346edb2-02df-4453-9ba6-a8c718d671bd",
                            CategoryId = "c0f96f74-96cf-438a-b89f-0888182b3e75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7270),
                            Description = "Pan tostado",
                            SubCategoryName = "Pan tostado",
                            state = 1
                        },
                        new
                        {
                            Id = "4b799d8f-ee08-4e8e-930e-ab8403392c4b",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7273),
                            Description = "Aguacates",
                            SubCategoryName = "Aguacates",
                            state = 1
                        },
                        new
                        {
                            Id = "a39c1fd6-2a60-4b29-8ba9-3e263406caf2",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7278),
                            Description = "Ajos",
                            SubCategoryName = "Ajos",
                            state = 1
                        },
                        new
                        {
                            Id = "bb789c84-5913-4a64-984b-20ad85a99de1",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7281),
                            Description = "Cebollas",
                            SubCategoryName = "Cebollas",
                            state = 1
                        },
                        new
                        {
                            Id = "6cf0328c-d542-43be-baed-72af19417433",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7285),
                            Description = "Chiles",
                            SubCategoryName = "Chiles",
                            state = 1
                        },
                        new
                        {
                            Id = "ce775a23-82b1-4cdf-9736-a378cdb88c8c",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7289),
                            Description = "Cilantro/Perejil",
                            SubCategoryName = "Cilantro/Perejil",
                            state = 1
                        },
                        new
                        {
                            Id = "a64360a1-d91a-4405-9996-56ef3a89e32c",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7293),
                            Description = "Jitomate",
                            SubCategoryName = "Jitomate",
                            state = 1
                        },
                        new
                        {
                            Id = "63efd264-3e31-480b-b86c-27c500705826",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7297),
                            Description = "Papas",
                            SubCategoryName = "Papas",
                            state = 1
                        },
                        new
                        {
                            Id = "5656e6aa-f9cb-4add-99cb-a9f2696480a0",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7302),
                            Description = "Limones",
                            SubCategoryName = "Limones",
                            state = 1
                        },
                        new
                        {
                            Id = "20db2648-207a-474b-a97d-d53451152de3",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7306),
                            Description = "Manzanas",
                            SubCategoryName = "Manzanas",
                            state = 1
                        },
                        new
                        {
                            Id = "5df74c33-8b66-4999-a511-6aecc01faa33",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7310),
                            Description = "Naranjas",
                            SubCategoryName = "Naranjas",
                            state = 1
                        },
                        new
                        {
                            Id = "8f762c3f-368d-412b-bd04-3090847b30ea",
                            CategoryId = "b296430c-42de-41f8-8fc2-3f7fadb44218",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7314),
                            Description = "Plátanos",
                            SubCategoryName = "Plátanos",
                            state = 1
                        },
                        new
                        {
                            Id = "d8fa7bc2-e8b5-44c4-b4ee-79f0db884832",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7319),
                            Description = "Agua mineral",
                            SubCategoryName = "Agua mineral",
                            state = 1
                        },
                        new
                        {
                            Id = "a1746970-5277-4100-87fb-27843e3e7572",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7324),
                            Description = "Agua natural",
                            SubCategoryName = "Agua natural",
                            state = 1
                        },
                        new
                        {
                            Id = "6d5403fe-eb3b-4e6a-b66f-5584d61c75d5",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7328),
                            Description = "Agua saborizada",
                            SubCategoryName = "Agua saborizada",
                            state = 1
                        },
                        new
                        {
                            Id = "b94e325c-2fa5-4c2e-ae97-66c53f7f23b1",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7339),
                            Description = "Jarabes",
                            SubCategoryName = "Jarabes",
                            state = 1
                        },
                        new
                        {
                            Id = "530edb0d-938c-4ae4-869a-567bf6bb529c",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7343),
                            Description = "Jugos/Néctares",
                            SubCategoryName = "Jugos/Néctares",
                            state = 1
                        },
                        new
                        {
                            Id = "7b3bdb7e-f9d4-4bfc-ab00-ad75b1e32185",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7347),
                            Description = "Naranjadas",
                            SubCategoryName = "Naranjadas",
                            state = 1
                        },
                        new
                        {
                            Id = "f586c0df-265a-46d3-9f7d-1219f269c2d6",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7354),
                            Description = "Bebidas de soya",
                            SubCategoryName = "Bebidas de soya",
                            state = 1
                        },
                        new
                        {
                            Id = "7002138f-f7fb-4a43-a880-060188703c09",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7359),
                            Description = "Bebidas en polvo",
                            SubCategoryName = "Bebidas en polvo",
                            state = 1
                        },
                        new
                        {
                            Id = "74bd441c-c526-4aa8-9948-467be87158e6",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7364),
                            Description = "Bebidas infantiles",
                            SubCategoryName = "Bebidas infantiles",
                            state = 1
                        },
                        new
                        {
                            Id = "25bb2d73-56d5-4479-bce5-a63aa1ca63d6",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7369),
                            Description = "Bebidas isotónicas",
                            SubCategoryName = "Bebidas isotónicas",
                            state = 1
                        },
                        new
                        {
                            Id = "c5ebff6a-ea3a-426c-a06c-38cfdf3fcc31",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7372),
                            Description = "Energetizantes",
                            SubCategoryName = "Energetizantes",
                            state = 1
                        },
                        new
                        {
                            Id = "09e77b14-a1c5-4094-8ae2-5af32ab26d5d",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7375),
                            Description = "Isotónicos",
                            SubCategoryName = "Isotónicos",
                            state = 1
                        },
                        new
                        {
                            Id = "fa7b0ef7-a5b5-48a8-80dd-bdbb51b3827a",
                            CategoryId = "087aa814-3f3d-4cfb-83ef-e11256d6ecdb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7378),
                            Description = "Refrescos",
                            SubCategoryName = "Refrescos",
                            state = 1
                        },
                        new
                        {
                            Id = "e06b976c-4745-4368-a615-3d011811589e",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7382),
                            Description = "Pastas listas para comer",
                            SubCategoryName = "Pastas listas para comer",
                            state = 1
                        },
                        new
                        {
                            Id = "1174d492-edd1-4f9c-b7cf-ce8a6f68abc3",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7385),
                            Description = "Sopas en vaso",
                            SubCategoryName = "Sopas en vaso",
                            state = 1
                        },
                        new
                        {
                            Id = "8a195233-1a00-4dbf-a41d-3c4c0d18b574",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7388),
                            Description = "Carnes y Embutidos",
                            SubCategoryName = "Carnes y Embutidos",
                            state = 1
                        },
                        new
                        {
                            Id = "6557a6d3-5317-44c2-98fd-333064c87b13",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7392),
                            Description = "Salchicha",
                            SubCategoryName = "Salchicha",
                            state = 1
                        },
                        new
                        {
                            Id = "77e2ee32-b9fc-4600-b28b-1ec5b0190e7d",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7395),
                            Description = "Mortadela",
                            SubCategoryName = "Mortadela",
                            state = 1
                        },
                        new
                        {
                            Id = "a055a422-56d0-4852-ac24-5a5925002c35",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7398),
                            Description = "Tocino",
                            SubCategoryName = "Tocino",
                            state = 1
                        },
                        new
                        {
                            Id = "a93e6d6a-fe84-4977-88f9-9eb5dac3c7e4",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7401),
                            Description = "Jamón",
                            SubCategoryName = "Jamón",
                            state = 1
                        },
                        new
                        {
                            Id = "14348004-c92e-45b9-8cd4-c82060d3f291",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7404),
                            Description = "Manteca",
                            SubCategoryName = "Manteca",
                            state = 1
                        },
                        new
                        {
                            Id = "e5bc3319-2a58-4df3-89bd-17edc123cc0a",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7407),
                            Description = "Chorizo",
                            SubCategoryName = "Chorizo",
                            state = 1
                        },
                        new
                        {
                            Id = "88cfed2e-4469-4d95-8f08-252ce4f74e8f",
                            CategoryId = "13e20bf2-8bff-4201-b3bf-30cf7e2cdb12",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7591),
                            Description = "Carne de puerco/res/pollo",
                            SubCategoryName = "Carne de puerco/res/pollo",
                            state = 1
                        },
                        new
                        {
                            Id = "ee9c7eb3-842a-4671-a046-96facfb2bcb6",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7594),
                            Description = "Suero",
                            SubCategoryName = "Suero",
                            state = 1
                        },
                        new
                        {
                            Id = "19fe7044-5f20-4720-9bf3-9214b1d9fbef",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7597),
                            Description = "Agua oxigenada",
                            SubCategoryName = "Agua oxigenada",
                            state = 1
                        },
                        new
                        {
                            Id = "8ac143dd-a639-4bad-9243-5706bf358ae1",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7600),
                            Description = "Preservativos",
                            SubCategoryName = "Preservativos",
                            state = 1
                        },
                        new
                        {
                            Id = "ad774f0a-e895-47c4-8b7e-9593c5d37f8e",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7603),
                            Description = "Alcohol",
                            SubCategoryName = "Alcohol",
                            state = 1
                        },
                        new
                        {
                            Id = "fefb0f12-c610-44ba-a425-b58344af0a3c",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7606),
                            Description = "Gasas",
                            SubCategoryName = "Gasas",
                            state = 1
                        },
                        new
                        {
                            Id = "9f8fff37-92e9-465b-ae5d-8940ae1e1cd3",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7609),
                            Description = "Analgésicos",
                            SubCategoryName = "Analgésicos",
                            state = 1
                        },
                        new
                        {
                            Id = "198c65d6-cb58-4d3f-be56-f1bc93fc0277",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7612),
                            Description = "Antigripales",
                            SubCategoryName = "Antigripales",
                            state = 1
                        },
                        new
                        {
                            Id = "0d2d3a77-64c7-4fb3-aee0-366d262d3ce3",
                            CategoryId = "07dd4e15-386e-44c7-8f63-801c1dddeb1a",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7615),
                            Description = "Antiácidos",
                            SubCategoryName = "Antiácidos",
                            state = 1
                        },
                        new
                        {
                            Id = "ed6b2c4a-bcf3-4d0b-8e98-83ddd98653b6",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7618),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "65ade45e-c4b5-4b7d-9d71-2cfae455fe31",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7621),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "c7296d61-4b18-46e9-8e26-7a809e636cb8",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7624),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "b3ae5bf6-5836-4e90-9c69-637afde26bd7",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7627),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "8efb933d-b689-4110-8cff-4a4e20f46104",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7629),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "c31961f5-e6ab-4f1f-a398-04ff4c7c2368",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7632),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "10db0819-5466-420d-acca-5ecaa864ec0a",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7640),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "4d85744f-add3-4f9e-88c8-2c34ab4f815a",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7644),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "9ba0b0c7-d09a-42e5-920d-fac472cfdad9",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7648),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "933336aa-5883-46b4-b6af-3f5c89b5b973",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7652),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "8aee87a6-643f-4197-abe7-ee9956cfe636",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7656),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "796cfb96-7b0d-4558-a4a9-08a9fed29071",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7660),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "8126f485-7a77-49c9-a3cb-de1be3b682bd",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7664),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "85bb728e-2c64-4d40-9189-735313307bf8",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7668),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "b71dd199-bb0d-44d2-98a1-71466e29b4ae",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7672),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "70bc49ab-7e64-461a-a350-d18323fe6743",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7676),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "b9d66a36-38d6-4d57-bad3-b0e949a5a574",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7680),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "08bf4c2a-55b9-4449-ba44-7a18e61157fa",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7684),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "65749701-c848-42a3-8549-b90938b0a98f",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7688),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "c90a0767-fb77-4136-ab65-7719945e803a",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7698),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "a77e5bf6-0d96-4922-999e-09b4909ebae5",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7701),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "cb924254-4f5b-4e25-aafc-b3c6e51a26a7",
                            CategoryId = "9fc02177-e0ba-42cf-bc95-cd2f7abc4418",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7705),
                            Description = "Se encuentra todo sobre perfumeria",
                            SubCategoryName = "HIGIENE PERSONAL",
                            state = 1
                        },
                        new
                        {
                            Id = "e7af707d-2029-4d1d-a10b-9a5c55d98ca2",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7709),
                            Description = "Suavizante de telas",
                            SubCategoryName = "Suavizante de telas",
                            state = 1
                        },
                        new
                        {
                            Id = "fec5fe83-b884-4d56-a5fe-6d7ab2156574",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7715),
                            Description = "Ácido muriático",
                            SubCategoryName = "Ácido muriático",
                            state = 1
                        },
                        new
                        {
                            Id = "a2a399bc-e461-40b5-85e0-dddc7b5ddea4",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7719),
                            Description = "Sosa caustica",
                            SubCategoryName = "Sosa caustica",
                            state = 1
                        },
                        new
                        {
                            Id = "b0a7966c-e4ab-426c-8628-c86106fbf3fe",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7729),
                            Description = "Aluminio",
                            SubCategoryName = "Aluminio",
                            state = 1
                        },
                        new
                        {
                            Id = "7be30abf-7504-480b-b0af-580ccc0be9ec",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7734),
                            Description = "Pilas",
                            SubCategoryName = "Pilas",
                            state = 1
                        },
                        new
                        {
                            Id = "a8e6b961-8f12-4679-a05c-0d72fdb4f755",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7737),
                            Description = "Shampoo para ropa",
                            SubCategoryName = "Shampoo para ropa",
                            state = 1
                        },
                        new
                        {
                            Id = "7e36389e-2514-4c1a-9b02-956cccb72b7a",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7743),
                            Description = "Servilletas",
                            SubCategoryName = "Servilletas",
                            state = 1
                        },
                        new
                        {
                            Id = "f7f2a895-0a64-4e47-bbab-9bd914eaa86e",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7747),
                            Description = "Servitoallas",
                            SubCategoryName = "Servitoallas",
                            state = 1
                        },
                        new
                        {
                            Id = "d295440a-24c8-4a8f-879a-41f9c883fa4b",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7750),
                            Description = "Aromatizantes",
                            SubCategoryName = "Aromatizantes",
                            state = 1
                        },
                        new
                        {
                            Id = "65bb2650-2d2a-46b4-841b-39bc67d3b132",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7753),
                            Description = "Cera para automóvil",
                            SubCategoryName = "Cera para automóvil",
                            state = 1
                        },
                        new
                        {
                            Id = "b83339e8-ec1b-44a4-8045-cb6e22905cd7",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7757),
                            Description = "Cera para calzados",
                            SubCategoryName = "Cera para calzados",
                            state = 1
                        },
                        new
                        {
                            Id = "d6d038ac-c428-4761-8d24-dc0703e8e4c2",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7761),
                            Description = "Pastillas sanitarias",
                            SubCategoryName = "Pastillas sanitarias",
                            state = 1
                        },
                        new
                        {
                            Id = "0dee8e1a-a3a8-411a-864a-542bf690fb34",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7764),
                            Description = "Limpiadores líquidos",
                            SubCategoryName = "Limpiadores líquidos",
                            state = 1
                        },
                        new
                        {
                            Id = "76ac4c24-9bc2-4897-a9a2-60529d306a14",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7770),
                            Description = "Limpiadores para pisos",
                            SubCategoryName = "Limpiadores para pisos",
                            state = 1
                        },
                        new
                        {
                            Id = "63eaca83-cacf-4d84-9b29-2fa454a9c206",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7777),
                            Description = "Jabón de barra",
                            SubCategoryName = "Jabón de barra",
                            state = 1
                        },
                        new
                        {
                            Id = "4c1f4d08-7a4b-43d3-beca-4959700e41bc",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7781),
                            Description = "Detergentes para trastes",
                            SubCategoryName = "Detergentes para trastes",
                            state = 1
                        },
                        new
                        {
                            Id = "2267271b-d123-4f63-8e8e-c1719a4ad20d",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7786),
                            Description = "Detergente para ropa",
                            SubCategoryName = "Detergente para ropa",
                            state = 1
                        },
                        new
                        {
                            Id = "b0c6bb87-7bb1-43d4-b6fa-43eb67694604",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7790),
                            Description = "Cerillos",
                            SubCategoryName = "Cerillos",
                            state = 1
                        },
                        new
                        {
                            Id = "bb40a622-9e9e-4c19-ae9f-545dc86bef0d",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7795),
                            Description = "Cloro/Blanqueador",
                            SubCategoryName = "Cloro/Blanqueador",
                            state = 1
                        },
                        new
                        {
                            Id = "cdea20ca-087d-4fb5-8553-105c1e2d9a84",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7800),
                            Description = "Cloro para ropa",
                            SubCategoryName = "Cloro para ropa",
                            state = 1
                        },
                        new
                        {
                            Id = "add2357f-a4bd-480d-9652-df476b521e4c",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7810),
                            Description = "Insecticidas",
                            SubCategoryName = "Insecticidas",
                            state = 1
                        },
                        new
                        {
                            Id = "11ae28fa-b2e2-44fb-8d65-aba73b937ead",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7816),
                            Description = "Fibras limpiadoras",
                            SubCategoryName = "Fibras limpiadoras",
                            state = 1
                        },
                        new
                        {
                            Id = "b4f45ffb-8b76-4304-bd06-706a228b5b10",
                            CategoryId = "21fcbb68-3e40-4550-b142-a302fc264a47",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7819),
                            Description = "Desinfectantes",
                            SubCategoryName = "Desinfectantes",
                            state = 1
                        },
                        new
                        {
                            Id = "0c64f205-d9ca-4a4b-90ec-eac98fbf523c",
                            CategoryId = "db2ca371-5ba5-49d9-81cf-f04f49a61b0e",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7823),
                            Description = "Paletas/ Helados",
                            SubCategoryName = "Paletas/ Helados",
                            state = 1
                        },
                        new
                        {
                            Id = "f66ac072-f4db-4bae-9ad3-25afe5d653b8",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7826),
                            Description = "Veladoras/Velas",
                            SubCategoryName = "Veladoras/Velas",
                            state = 1
                        },
                        new
                        {
                            Id = "422edf4a-d9e6-40f4-9cc1-9b0dcd0756ac",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7830),
                            Description = "Cepillo de plástico",
                            SubCategoryName = "Cepillo de plástico",
                            state = 1
                        },
                        new
                        {
                            Id = "66c6219a-a5eb-49d5-9a73-d36bb76d821a",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7834),
                            Description = "Vasos desechables",
                            SubCategoryName = "Vasos desechables",
                            state = 1
                        },
                        new
                        {
                            Id = "8ef9734c-7ed8-4ce0-9899-d96b3da864eb",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7838),
                            Description = "Cinta adhesiva",
                            SubCategoryName = "Cinta adhesiva",
                            state = 1
                        },
                        new
                        {
                            Id = "fb894ec4-3008-46d0-bcbd-10c66df049af",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7846),
                            Description = "Cucharas de plástico",
                            SubCategoryName = "Cucharas de plástico",
                            state = 1
                        },
                        new
                        {
                            Id = "9538e426-3d8a-4575-aaeb-671bfadfcf4c",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7850),
                            Description = "Escobas/Trapeadores/Mechudos",
                            SubCategoryName = "Escobas/Trapeadores/Mechudos",
                            state = 1
                        },
                        new
                        {
                            Id = "df953e9b-49b2-4c98-bf43-c0b89ffd2671",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7854),
                            Description = "Trampas para ratas",
                            SubCategoryName = "Trampas para ratas",
                            state = 1
                        },
                        new
                        {
                            Id = "6eea4362-7ae5-4631-b3ca-571d523b3176",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7860),
                            Description = "Tenedores de plástico",
                            SubCategoryName = "Tenedores de plástico",
                            state = 1
                        },
                        new
                        {
                            Id = "3b2730ed-eee3-4d6a-b7e2-46934dd2cd25",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7866),
                            Description = "Extensiones/Multicontacto",
                            SubCategoryName = "Extensiones/Multicontacto",
                            state = 1
                        },
                        new
                        {
                            Id = "4636fd58-00ad-4f6c-ab97-6a91a2a6e210",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7870),
                            Description = "Recogedor de metal/plástico",
                            SubCategoryName = "Recogedor de metal/plástico",
                            state = 1
                        },
                        new
                        {
                            Id = "3ba56596-8256-46a0-85b1-fcedb255c8a2",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7874),
                            Description = "Popotes",
                            SubCategoryName = "Popotes",
                            state = 1
                        },
                        new
                        {
                            Id = "b1aac6b6-1e84-45a6-ac41-52e14a8ea1fa",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7880),
                            Description = "Platos desechables",
                            SubCategoryName = "Platos desechables",
                            state = 1
                        },
                        new
                        {
                            Id = "19634b95-60be-45ec-8ca8-e508e273af05",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7889),
                            Description = "Focos",
                            SubCategoryName = "Focos",
                            state = 1
                        },
                        new
                        {
                            Id = "aae444bc-4a86-4e9f-bfbd-71ad73da07a2",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7897),
                            Description = "Fusibles",
                            SubCategoryName = "Fusibles",
                            state = 1
                        },
                        new
                        {
                            Id = "0d54b411-6a42-49b1-8a8a-ee2ac22aa1be",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7901),
                            Description = "Jergas/Franelas",
                            SubCategoryName = "Jergas/Franelas",
                            state = 1
                        },
                        new
                        {
                            Id = "8c066537-f8d7-4031-9172-872081e1d0a3",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7906),
                            Description = "Matamoscas",
                            SubCategoryName = "Matamoscas",
                            state = 1
                        },
                        new
                        {
                            Id = "591bac37-162a-4314-b0ae-46e9db02f691",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7909),
                            Description = "Pegamento",
                            SubCategoryName = "Pegamento",
                            state = 1
                        },
                        new
                        {
                            Id = "dfce1885-ecbe-432e-9148-8a2d34809082",
                            CategoryId = "27d5e91e-1229-49cd-964b-cc812a81faeb",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7913),
                            Description = "Mecate/cuerda",
                            SubCategoryName = "Mecate/cuerda",
                            state = 1
                        },
                        new
                        {
                            Id = "98a5dd90-ba52-4534-998f-5da2e95e38b4",
                            CategoryId = "9cb3d8c8-226e-4f1a-b04d-258db3329c75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7924),
                            Description = "Hielo",
                            SubCategoryName = "Hielo",
                            state = 1
                        },
                        new
                        {
                            Id = "60366d57-cfe4-473a-a473-6e58fce5c928",
                            CategoryId = "9cb3d8c8-226e-4f1a-b04d-258db3329c75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7928),
                            Description = "Tarjetas telefónicas",
                            SubCategoryName = "Tarjetas telefónicas",
                            state = 1
                        },
                        new
                        {
                            Id = "24a39fa6-79d3-47c7-9e55-180bf92c2d89",
                            CategoryId = "9cb3d8c8-226e-4f1a-b04d-258db3329c75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7932),
                            Description = "Recargas móviles",
                            SubCategoryName = "Recargas móviles",
                            state = 1
                        },
                        new
                        {
                            Id = "62433dfd-835e-4651-99f5-78ea6eefec3f",
                            CategoryId = "9cb3d8c8-226e-4f1a-b04d-258db3329c75",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 623, DateTimeKind.Local).AddTicks(7936),
                            Description = "Cigarros",
                            SubCategoryName = "Cigarros",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "362c2637-2ad9-449a-9498-dbd74be87ee8",
                            Address = "San Lorenzo",
                            BusinessId = "de07358c-3a51-42fb-8690-c383b91b5844",
                            CreatedDate = new DateTime(2022, 10, 20, 13, 53, 3, 553, DateTimeKind.Local).AddTicks(7304),
                            Email = "almacensanlorenzo@gmail.com",
                            FirstName = "Almacen",
                            LastName = "San Lorenzo",
                            Phone = "3416987542",
                            state = 1
                        });
                });

            modelBuilder.Entity("DataModel.Entities.Account", b =>
                {
                    b.HasOne("DataModel.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entities.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.Category", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("Categories")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.History", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("History")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.HistoryPrice", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("HistoryPrice")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataModel.Entities.Product", "Product")
                        .WithMany("HistoryPrice")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("DataModel.Entities.IncreasePriceAfterTwelve", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("IncreasePriceAfterTwelve")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.Lot", b =>
                {
                    b.HasOne("DataModel.Entities.Product", "Product")
                        .WithMany("Lots")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("DataModel.Entities.PaymentType", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("PaymentType")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.Product", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("DataModel.Entities.Category", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DataModel.Entities.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("DataModel.Entities.Provider", b =>
                {
                    b.HasOne("DataModel.Entities.Account", "Account")
                        .WithMany("Providers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.Sale", b =>
                {
                    b.HasOne("DataModel.Entities.PaymentType", "PaymentType")
                        .WithMany("Sale")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.SaleDetail", b =>
                {
                    b.HasOne("DataModel.Entities.Sale", "Sale")
                        .WithMany("SaleDetail")
                        .HasForeignKey("SaleId");

                    b.HasOne("DataModel.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId");
                });

            modelBuilder.Entity("DataModel.Entities.SubCategory", b =>
                {
                    b.HasOne("DataModel.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataModel.Entities.User", b =>
                {
                    b.HasOne("DataModel.Entities.Business", "Business")
                        .WithMany("Users")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
